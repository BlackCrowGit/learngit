Git命令总结:

创建版本库:
	初始化一个Git仓库,使用 git init 命令.
	添加文件到Git仓库,分两:
		第一步,使用命令 git add ,注意，可反复多次使用，添加多个文件;
		第二步,使用命令 git commit ,完成.

时光机穿梭:
	要随时掌握工作区的状态,使用 git status 命令.
	如果 git status 告诉你有文件被修改过,用 git diff 可以查看修改内容.
	
版本回退:
	HEAD指向的版本就是当前版本,因此,Git允许我们在版本的历史之间穿梭,使用命令 git reset --hard commit_id .
	穿梭前,用 git log 可以查看提交历史,以便确定要回退到哪个版本.
	要重返未来,用 git reflog 查看命令历史,以便确定要回到未来的哪个版本.
	
撤销修改:
	场景1:当你改乱了工作区某个文件的内容,想直接丢弃工作区的修改时,用命令 git checkout -- file .
	场景2:当你不但改乱了工作区某个文件的内容,还添加到了暂存区时,想丢弃修改,分两步,第一步用命令 git reset HEAD file ,就回到了场景1,第二步按场景1操作.
	场景3:已经提交了不合适的修改到版本库时,想要撤销本次提交,参考版本回退,不过前提是没有推送到远程库.
	
删除文件:
	命令 git rm 用于删除一个文件.如果一个文件已经被提交到版本库,那么你永远不用担心误删,但是要小心,你只能恢复文件到最新版本,你会丢失最近一次提交后你修改的内容.
	
远程仓库:
	第一步,创建 SSH Key :$ ssh-keygen -t rsa -C "youremail@example.com"
	你需要把邮件地址换成你自己的邮件地址,然后一路回车,使用默认值即可,由于这个Key也不是用于军事目的,所以也无需设置密码.
	在用户主目录里找到.ssh目录,里面有id_rsa和id_rsa.pub两个文件,这两个就是SSH Key的秘钥对,id_rsa是私钥,不能泄露出去,id_rsa.pub是公钥,可以放心地告诉任何人.
	第二步,登陆GitHub,打开"Account settings","SSH Keys"页面:然后,点"Add SSH Key",填上任意Title,在Key文本框里粘贴id_rsa.pub文件的内容,点"Add Key",就可以看到已经添加的Key.
	
添加远程库:
	首先,登陆GitHub,然后,在右上角找到"Create a new repo"按钮,创建一个新的仓库:
		在Repository name填入name,其他保持默认设置,点击"Create repository"按钮,就成功地创建了一个新的Git仓库.
	接下来,在本地的name仓库下运行命令:
		$ git remote add origin git@github.com:GitHubName/name.git
		添加后,远程库的名字就是origin,这是Git默认的叫法,也可以改成别的,但是origin这个名字一看就知道是远程库.
	下一步,就可以把本地库的所有内容推送到远程库上:
		$ git push -u origin master
		由于远程库是空的,我们第一次推送master分支时,加上了 -u 参数,Git不但会把本地的master分支内容推送的远程新的master分支,还会把本地的master分支和远程的master分支关联起来,在以后的推送或者拉取时就可以简化命令.
	此后,每次本地提交后,只要有必要,就可以使用命令 git push origin master 推送最新修改.
	
从远程库克隆:
	首先,登陆GitHub,创建一个新的仓库,名字叫gitskills:
		勾选Initialize this repository with a README,这样GitHub会自动为我们创建一个README.md文件.
	然后用命令 git clone 克隆一个本地库:
		$ git clone (库地址)
	
分支管理:
